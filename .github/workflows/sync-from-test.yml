name: Sync from TEST

on:
  workflow_dispatch: {}   # lancement manuel uniquement

permissions:
  contents: write         # nécessaire pour pousser sur CakeProd

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout PROD (repo courant)
      - name: Checkout PROD
        uses: actions/checkout@v4  # doc: https://github.com/actions/checkout

      - name: Show PROD before
        run: |
          echo "== ROOT PROD (before) =="
          ls -la

      # 2) Checkout TEST dans un sous-dossier
      - name: Checkout TEST
        uses: actions/checkout@v4
        with:
          repository: BlackStar1523/CakeTest.github.io
          token: ${{ secrets.SYNC_TEST }}   # ton PAT classic repo
          ref: main                          # adapte si la branche défaut n'est pas main
          fetch-depth: 1
          path: test-src

      - name: Show TEST tree
        run: |
          echo "== ROOT TEST (pulled) =="
          ls -la test-src
          echo "== Files (max depth 2) =="
          find test-src -maxdepth 2 -type f -print

      # 3) Sauvegarder les fichiers PROD à préserver
      - name: Backup preserved files
        run: |
          mkdir -p preserve/.github/workflows
          # à adapter si tu veux préserver d'autres fichiers
          [ -f assets/JS/config.js ] && mkdir -p preserve/assets/JS && cp -a assets/JS/config.js preserve/assets/JS/config.js || true
          [ -d .github/workflows ] && cp -a .github/workflows/. preserve/.github/workflows/ || true
          [ -f CNAME ] && cp -a CNAME preserve/CNAME || true
          [ -f robots.txt ] && cp -a robots.txt preserve/robots.txt || true

      # 4) Vider la racine PROD (sans toucher au .git)
      - name: Wipe PROD working tree (except .git)
        run: |
          shopt -s dotglob nullglob
          for p in * .*; do
            case "$p" in
              .|..|.git) continue ;;
            esac
            rm -rf -- "$p"
          done

      # 5) Copier le contenu de TEST -> racine PROD
      - name: Copy TEST into PROD
        run: |
          shopt -s dotglob
          cp -a test-src/* ./ || true

      # 6) Restaurer les fichiers préservés
      - name: Restore preserved files
        run: |
          [ -f preserve/assets/JS/config.js ] && mkdir -p assets/JS && cp -a preserve/assets/JS/config.js assets/JS/config.js || true
          [ -d preserve/.github/workflows ] && mkdir -p .github/workflows && cp -a preserve/.github/workflows/. .github/workflows/ || true
          [ -f preserve/CNAME ] && cp -a preserve/CNAME CNAME || true
          [ -f preserve/robots.txt ] && cp -a preserve/robots.txt robots.txt || true

      # 7) Nettoyage du dossier de travail
      - name: Clean work dirs
        run: rm -rf test-src preserve

      # 8) Vérif / Commit / Push
      - name: Git status
        run: |
          echo "== git status =="
          git status -s

      - name: Commit & push
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name "github-actions"
            git config user.email "actions@users.noreply.github.com"
            git add -A
            git commit -m "Sync from TEST (auto)"
            git push origin HEAD:main
          else
            echo "No changes to commit"
          fi

      - name: Show PROD after
        run: |
          echo "== ROOT PROD (after) =="
          ls -la
